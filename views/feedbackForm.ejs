<!DOCTYPE html>
<html>
<head>
  <title><%= form.title %></title>
  <link rel="stylesheet" href="/css/style.css"> <!-- Ensure the correct path to the CSS file -->
  <script src="/js/main.js" defer></script> <!-- Ensure the correct path to the JavaScript file -->
</head>
<body>
  <h1><%= form.title %></h1>
  <form id="feedbackForm" method="POST" action="/submit-feedback">
    <% form.questions.forEach((question, index) => { %>
      <div>
        <label><%= question.questionText %></label>
        <% if (question.questionType === 'text') { %>
          <input type="text" name="responses[<%= question._id %>]" required>
        <% } else if (question.questionType === 'multipleChoice') { %>
          <% question.options.forEach(option => { %>
            <div>
              <input type="radio" name="responses[<%= question._id %>]" value="<%= option %>" required> <%= option %>
            </div>
          <% }); %>
        <% } else if (question.questionType === 'checkbox') { %>
          <% question.options.forEach(option => { %>
            <div>
              <input type="checkbox" name="responses[<%= question._id %>][]" value="<%= option %>"> <%= option %>
            </div>
          <% }); %>
        <% } else if (question.questionType === 'rating') { %>
          <select name="responses[<%= question._id %>]" required>
            <option value="1">1</option>
            <option value="2">2</option>
            <option value="3">3</option>
            <option value="4">4</option>
            <option value="5">5</option>
          </select>
        <% } %>
      </div>
    <% }); %>
    <input type="hidden" name="formId" value="<%= form._id %>">
    <input type="hidden" name="_csrf" value="<%= csrfToken %>">
    <button type="submit">Submit Feedback</button>
  </form>
  <script>
    document.getElementById('feedbackForm').addEventListener('submit', function(event) {
      event.preventDefault(); // Prevent the default form submission
      const formData = new FormData(event.target);
      const formId = formData.get('formId');
      const responses = {};
      formData.forEach((value, key) => {
        if (key.startsWith('responses[')) {
          const questionId = key.match(/responses\[(.*?)\]/)[1];
          if (key.endsWith('[]')) {
            if (!responses[questionId]) {
              responses[questionId] = [];
            }
            responses[questionId].push(value);
          } else {
            responses[questionId] = value;
          }
        }
      });

      fetch('/submit-feedback', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'CSRF-Token': formData.get('_csrf') // Correctly include the CSRF token in the headers
        },
        body: JSON.stringify({ formId, responses })
      })
      .then(response => {
        if (!response.ok) {
          console.error('Error submitting feedback:', response.statusText);
          throw new Error('Network response was not ok');
        }
        return response.json();
      })
      .then(data => {
        console.log('Feedback submitted successfully:', data);
        alert('Thank you for your feedback!'); // Simple user feedback mechanism
      })
      .catch(error => {
        console.error('Error submitting feedback:', error);
        alert('An error occurred while submitting your feedback. Please try again.');
      });
    });
  </script>
</body>
</html>